{"version":3,"sources":["component/About.js","component/Navbar.js","component/TextArea.js","component/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","Color","darkmode","btnColor","className","style","backgroundColor","mode","color","border","id","type","Navbar","to","title","src","onClick","document","body","showMessage","height","width","alt","func","htmlFor","TextArea","useState","text","setText","heading","value","onChange","event","target","rows","disabled","split","filter","element","length","t1","toUpperCase","toLowerCase","reverse","join","tex","getElementById","select","navigator","clipboard","writeText","getSelection","removeAllRanges","newtex","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","defaultProps","App","setmode","setmsg","setdarkmode","mes","setTimeout","dark","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.911f646c.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function About(props) {\r\n \r\n    const Color = () => {\r\n        let btnbg;\r\n        props.darkmode === 'black' ? \r\n            btnbg = 'dimgray' :\r\n            props.darkmode === 'green' ? \r\n                btnbg = 'black' :\r\n                props.darkmode === 'purple' ? \r\n                     btnbg = 'green' :\r\n                     props.darkmode === 'red' ? \r\n                         btnbg = 'yellow' :\r\n                         props.darkmode === 'orange' ? \r\n                            btnbg = 'black' : btnbg = 'blue';\r\n\r\n                            return btnbg;\r\n    }\r\n\r\n    const btnColor = () => {\r\n        let btnbg;\r\n        props.darkmode === 'black' ? \r\n            btnbg = 'white' :\r\n            props.darkmode === 'green' ? \r\n                btnbg = 'green' :\r\n                props.darkmode === 'purple' ? \r\n                     btnbg = 'yellow' :\r\n                     props.darkmode === 'red' ? \r\n                         btnbg = 'red' :\r\n                         props.darkmode === 'orange' ? \r\n                            btnbg = 'orange' : btnbg = 'white';\r\n\r\n                            return btnbg;\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\" style={{backgroundColor : props.mode==='light'?'white':props.darkmode == null ? 'dimgray':Color(), color : props.mode==='light'?props.darkmode:btnColor(),  border:'2px solid white'}}>\r\n            <h1 className=\"my-3\">About Us</h1>\r\n            <div className=\"accordion\" id=\"accordionExample\">\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                    <button className=\"accordion-button\" type=\"button\" style={{backgroundColor : props.mode==='light'?'white':props.darkmode == null ? 'dimgray':Color(), color : props.mode==='light'?props.darkmode:btnColor(), border:'1px solid white'}} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                        <strong>Analyse your text</strong>\r\n                    </button>\r\n                    </h2>\r\n                    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                    <div className=\"accordion-body\" style={{backgroundColor : props.mode==='light'?'white':props.darkmode == null ? 'dimgray':Color(), color : props.mode==='light'?props.darkmode:btnColor(), border:'1px solid white'}} >\r\n                        <strong>Here you can aalyse your text.</strong><br/>You can enter text to the Text area.<br />You can change case of your entered text.<br/>You can copy that text to your clipboard.<br/>You can clear text from textarea.<br/>You can also reverse your text.<br/>Only you have to enter text and select operation.\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\" style={{backgroundColor : props.mode==='light'?'white':props.darkmode == null ? 'dimgray':Color(), color : props.mode==='light'?props.darkmode:btnColor(), border:'1px solid white'}}>\r\n                    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                    <button className=\"accordion-button collapsed\" type=\"button\" style={{backgroundColor : props.mode==='light'?'white':props.darkmode == null ? 'dimgray':Color(), color : props.mode==='light'?props.darkmode:btnColor(), border:'1px solid white'}} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                    <strong>Free to use</strong>\r\n                    </button>\r\n                    </h2>\r\n                    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                    <div className=\"accordion-body\" style={{backgroundColor : props.mode==='light'?'white':props.darkmode == null ? 'dimgray':Color(), color : props.mode==='light'?props.darkmode:btnColor(), border:'1px solid white'}}>\r\n                        <strong>It is fully free website to use.</strong> Here no need to pay fees for anything. you not have to pay for anything. you can use it as per your requirement.\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\" style={{backgroundColor : props.mode==='light'?'white':props.darkmode == null ? 'dimgray':Color(), color : props.mode==='light'?props.darkmode:btnColor(), border:'1px solid white'}}>\r\n                    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                    <button className=\"accordion-button collapsed\" type=\"button\" style={{backgroundColor : props.mode==='light'?'white':props.darkmode == null ? 'dimgray':Color(), color : props.mode==='light'?props.darkmode:btnColor(), border:'1px solid white'}} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                    <strong> Browser compatible</strong>\r\n                    </button>\r\n                    </h2>\r\n                    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                    <div className=\"accordion-body\" style={{backgroundColor : props.mode==='light'?'white':props.darkmode == null ? 'dimgray':Color(), color : props.mode==='light'?props.darkmode:btnColor(), border:'1px solid white'}}>\r\n                        <strong>It is supported to any browser.</strong> it is compatible with any operation system and with any browser.\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport React from 'react'\r\n\r\nexport default function Navbar(props) {\r\n    const purpleClick = () => {\r\n        props.darkmode('purple');\r\n        document.body.style.backgroundColor = 'purple';\r\n        props.showMessage(\"Purple DarkMode is activated\",\"success\");\r\n    }\r\n\r\n    const greenClick = () => {\r\n        props.darkmode('green');\r\n        document.body.style.backgroundColor = 'green';\r\n        props.showMessage(\"Green DarkMode is activated\",\"success\");\r\n    }\r\n\r\n    const blackClick = () => {\r\n        props.darkmode('black');\r\n        document.body.style.backgroundColor = 'black';\r\n        props.showMessage(\"Black DarkMode is activated\",\"success\");\r\n    }\r\n\r\n    const redClick = () => {\r\n        props.darkmode('red');\r\n        document.body.style.backgroundColor = 'red';\r\n        props.showMessage(\"Red DarkMode is activated\",\"success\");\r\n    }\r\n\r\n    const orangeClick = () => {\r\n        props.darkmode('orange');\r\n        document.body.style.backgroundColor = 'orange';\r\n        props.showMessage(\"Orange DarkMode is activated\",\"success\");\r\n    }\r\n    \r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/about\">AboutUs</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\"></li>\r\n                    </ul>\r\n                    {props.mode === 'dark'?\r\n                        <div style={{color:\"white\"}}>\r\n                            Other DarkModes :\r\n                            <img src=\"https://htmlcolorcodes.com/assets/images/colors/neon-orange-color-solid-background-1920x1080.png\" onClick={orangeClick} style={{height:\"20px\", width:\"20px\", border:\"1px solid white\"}} alt=\"Orange\" className=\"rounded-circle mx-2\" />\r\n                            <img src=\"https://images.unsplash.com/flagged/photo-1593005510509-d05b264f1c9c?ixid=MnwxMjA3fDB8MHxzZWFyY2h8MXx8cmVkJTIwY29sb3VyfGVufDB8fDB8fA%3D%3D&ixlib=rb-1.2.1&w=1000&q=80\" onClick={redClick} style={{height:\"20px\", width:\"20px\", border:\"1px solid white\"}} alt=\"Red\" className=\"rounded-circle mx-2\" />\r\n                            <img src=\"https://artsyfartsylife.com/wp-content/uploads/2019/09/normal-purple-color-200x200.jpg\" onClick={purpleClick} style={{height:\"20px\", width:\"20px\", border:\"1px solid white\"}} alt=\"Purple\" className=\"rounded-circle mx-2\" />\r\n                            <img src=\"https://www.colorcombos.com/images/colors/5BC236.png\" onClick={greenClick} style={{height:\"20px\", width:\"20px\", border:\"1px solid white\"}} alt=\"Green\" className=\"rounded-circle mx-2\" />\r\n                            <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/5/50/Black_colour.jpg/1200px-Black_colour.jpg\" onClick={blackClick} style={{height:\"20px\", width:\"20px\", border:\"1px solid white\"}} alt=\"Black\" className=\"rounded-circle mx-2\" />\r\n                        </div>:\"\"\r\n                    }\r\n                    <div className={`form-check form-switch text-${props.mode} mx-2`}>\r\n                        <input className=\"form-check-input\" type=\"checkbox\" onClick={props.func} id=\"flexSwitchCheckDefault\" />\r\n                        <label className =\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\" style={{color : props.mode==='light'?'black':'white'}}>Dark Mode</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>      \r\n    )\r\n}\r\n\r\nNavbar.propTypes = {title: PropTypes.string.isRequired}\r\n\r\nNavbar.defaultProps = {title: 'TextEditor'}","import React, {useState} from \"react\"; \r\n\r\nexport default function TextArea(props) {\r\n    const [text, setText] = useState('');\r\n\r\n    const changeevent = (event) => {\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const clickevent = () => {\r\n        let t1 = text.toUpperCase();\r\n        setText(t1);\r\n        props.showMessage(\"Your Text is converted into upperCase\",\"success\");\r\n    }\r\n\r\n    const clickLoEvent = () => {\r\n        let t1 = text.toLowerCase();\r\n        setText(t1);\r\n        props.showMessage(\"Your Text is converted into lowerCase\",\"success\");\r\n    }\r\n\r\n    const clickcoEvent = () => {\r\n        var splitString = text.split(\"\");\r\n        var reverseArray = splitString.reverse();\r\n        var t1 = reverseArray.join(\"\");\r\n        setText(t1);\r\n        props.showMessage(\"Your Text is reversed\",\"success\");\r\n    }\r\n\r\n    const clickcopyEvent = () => {\r\n        let tex = document.getElementById(\"exampleFormControlTextarea1\");\r\n        tex.select();\r\n        navigator.clipboard.writeText(tex.value);\r\n        props.showMessage(\"Your Text is copy to clipboard\",\"success\");\r\n        document.getSelection().removeAllRanges();\r\n    }\r\n    \r\n    const clickrsEvent = () => {\r\n        let newtex = text.split(/[ ]+/);\r\n        setText(newtex.join(\" \"));\r\n        props.showMessage(\"Remove extra spaces from text\",\"success\");\r\n    }\r\n\r\n    const clickclrEvent = () => {\r\n        let t1 = '';\r\n        setText(t1);\r\n        props.showMessage(\"Your Text is cleared\",\"success\");\r\n    }\r\n\r\n    const Color = () => {\r\n        let btnbg;\r\n        props.darkmode === 'black' ? \r\n            btnbg = 'white' :\r\n            props.darkmode === 'green' ? \r\n                btnbg = 'black' :\r\n                props.darkmode === 'purple' ? \r\n                     btnbg = 'green' :\r\n                     props.darkmode === 'red' ? \r\n                         btnbg = 'yellow' :\r\n                         props.darkmode === 'orange' ? \r\n                            btnbg = 'black' : btnbg = 'blue';\r\n\r\n                            return btnbg;\r\n    }\r\n\r\n    const btnColor = () => {\r\n        let btnbg;\r\n        props.darkmode === 'black' ? \r\n            btnbg = 'black' :\r\n            props.darkmode === 'green' ? \r\n                btnbg = 'green' :\r\n                props.darkmode === 'purple' ? \r\n                     btnbg = 'yellow' :\r\n                     props.darkmode === 'red' ? \r\n                         btnbg = 'red' :\r\n                         props.darkmode === 'orange' ? \r\n                            btnbg = 'orange' : btnbg = 'white';\r\n\r\n                            return btnbg;\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div style={{color : props.mode==='light'?'#042743':'white'}}>\r\n            <h1 className=\"mb-4\">{props.heading}</h1>               \r\n            \r\n            <div className=\"mb-3\">\r\n                <textarea style={{backgroundColor : props.mode==='light'?'white':props.darkmode == null ? 'dimgray':Color(), color : props.mode==='light'?props.darkmode:btnColor()}} className=\"form-control\" value = {text} onChange={changeevent} id=\"exampleFormControlTextarea1\" rows=\"10\"></textarea>\r\n            </div>\r\n            \r\n            <button type=\"button\" disabled={(text.split(\" \").filter((element) => {return element.length !== 0}).length) === 0} onClick={clickevent} style={{backgroundColor:Color(), color:btnColor(), border:`1px solid ${btnColor()}`}} className=\"btn btn-primary mx-1\">Convert To UpperCase</button>\r\n            <button type=\"button\" disabled={(text.split(\" \").filter((element) => {return element.length !== 0}).length) === 0} onClick={clickLoEvent} style={{backgroundColor:Color(), color:btnColor(), border:`1px solid ${btnColor()}`}} className=\"btn btn-primary mx-1\">Convert To LowerCase</button>\r\n            <button type=\"button\" disabled={(text.split(\" \").filter((element) => {return element.length !== 0}).length) === 0} onClick={clickcoEvent} style={{backgroundColor:Color(), color:btnColor(), border:`1px solid ${btnColor()}`}} className=\"btn btn-primary mx-1\">Convert To ReverseOrder</button>\r\n            <button type=\"button\" disabled={(text.split(\" \").filter((element) => {return element.length !== 0}).length) === 0} onClick={clickcopyEvent} style={{backgroundColor:Color(), color:btnColor(), border:`1px solid ${btnColor()}`}} className=\"btn btn-primary mx-1\">Copy Text</button>\r\n            <button type=\"button\" disabled={(text.split(\" \").filter((element) => {return element.length !== 0}).length) === 0} onClick={clickrsEvent} style={{backgroundColor:Color(), color:btnColor(), border:`1px solid ${btnColor()}`}} className=\"btn btn-primary mx-1\">Remove Spaces</button>\r\n            <button type=\"button\" disabled={(text.split(\" \").filter((element) => {return element.length !== 0}).length) === 0} onClick={clickclrEvent} style={{backgroundColor:Color(), color:btnColor(), border:`1px solid ${btnColor()}`}} className=\"btn btn-primary mx-1\">Clear Text</button>\r\n        </div>\r\n\r\n        <div className=\"container my-3\" style={{color : props.mode==='light'?'black':'white'}}>\r\n            <h2>Text Summary</h2>\r\n            <p>{text.split(\" \").filter((element) => {return element.length !== 0}).length} Words and {text.length} Characters</p>\r\n            <p>{text.split(\" \").filter((element) => {return element.length !== 0}).length*0.008} Minutes To Read</p>\r\n            <h2>Preview Of Text</h2>\r\n            <p>{text.length>0?text:\"Enter text to text area for see the preview of text\"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word) => {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        <div style={{height:'50px'}}>\r\n       { props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong> {props.alert.msg}\r\n        </div>}\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport About from './component/About';\nimport Navbar from './component/Navbar';\nimport TextArea from './component/TextArea';\nimport {useState} from 'react';\nimport Alert from './component/Alert';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setmode] = useState('light');\n  const [msg,setmsg] = useState(null);\n  const [darkmode,setdarkmode] = useState(null);\n\n  const showMessage = (mes,type) => {\n    setmsg({\n      msg: mes,\n      type:type\n    })\n\n    setTimeout(() => {\n      setmsg(null);\n    }, 1500);\n  }\n\n  const togglechange = () => {\n    if(mode === 'light'){\n      setmode('dark');\n      setdarkmode(null);\n      document.body.style.backgroundColor = '#042743';\n      showMessage(\"Dark mode is activated\",\"success\");\n    }\n    else{\n      setmode('light');\n      setdarkmode(null);\n      document.body.style.backgroundColor = 'white';\n      showMessage(\"Light mode is activated\",\"success\");\n    }\n  }\n\n  const showDarkMode = (dark) => {\n    setdarkmode(dark);\n  }\n\n  return (\n    <>\n    <Router>\n     <Navbar title=\"TextUtils\" mode={mode}  func={togglechange} darkmode={showDarkMode} showMessage={showMessage}/> \n     <Alert alert={msg}/>\n        <div className=\"container my-5\">\n          <Switch>\n            <Route exact path=\"/about\">\n              <About mode={mode} darkmode={darkmode}/>\n            </Route>\n            <Route exact path=\"/\">\n              <TextArea showMessage={showMessage} heading=\"Enter text below to analyse\" mode={mode} darkmode={darkmode} />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}